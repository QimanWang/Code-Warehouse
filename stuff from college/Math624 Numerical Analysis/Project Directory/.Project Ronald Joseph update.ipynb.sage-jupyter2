{"type":"settings","kernel":"python2","backend_state":"running","trust":true,"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":2},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython2","version":"2.7.13"}},"kernel_state":"idle"}
{"type":"file","last_load":1508413720529}
{"type":"cell","id":"75526d","pos":7,"input":"#Conclusion: Inner Product 2 gives the best appoximation of sin(x) by a polynomial of degre <=3","cell_type":"code","exec_count":0}
{"type":"cell","id":"9295cc","pos":1,"input":"import numpy as np\nfrom sympy import *\nt = Symbol('t')\n#INNER PRODUCT 2\ndef inner_product2(f,g):\n    df1 = diff(f,t)\n    dg1 = diff(g,t)\n    return f.subs(t,1.0)*g.subs(t,1.0) + df1.subs(t,1.0)*dg1.subs(t,1.0) + f.subs(t,5.0)*g.subs(t,5.0) + df1.subs(t,5.0)*dg1.subs(t,5.0)#Best approximation of sin(x) of all six inner products.\n#Finds basis for subspace of polynomials of degree <= 3\nd=3 # max degree\nmyOut2=[] # initialize the output with zeros\nfor i in range(d+1):\n    fi=t**i\n    for j in range(i):\n        fi+=-inner_product2(myOut2[j],t**i)*myOut2[j]\n    myOut2.append(fi/(sqrt(inner_product2(fi,fi))))\nprint(myOut2)\n#Projection of sin onto subspace of polynomials of degree <= 3\ny=0\nfor p in myOut2:\n    y+=inner_product2(sin(t),p) * p\nprint(y)\nmyplot=plot(sin(t),y,(t,-5,5),ylim=[-5,5],show=False)\nmyplot[0].line_color = 'r'\nmyplot[1].line_color = 'g'\nmyplot.show()","output":{"0":{"name":"stdout","output_type":"stream","text":"[sqrt(2)/2, 0.316227766016838*t - 0.948683298050514, 0.176776695296637*t**2 - 1.06066017177982*t + 0.883883476483185, 0.0988211768802619*t**3 - 0.889390591922356*t**2 + 2.1147731852376*t - 1.00797600417867]\n0.10776013256668*t**3 - 1.00192120815073*t**2 + 2.22086432446957*t - 0.485232264077618\n"},"1":{"data":{"image/png":"0b6af2235399c9d1abd698119732bfa0fe2ff602"}}},"cell_type":"code","exec_count":9}
{"type":"cell","id":"8d779b","pos":3,"input":"import numpy as np\nfrom sympy import *\nt = Symbol('t')\n#INNER PRODUCT 4\ndef inner_product4(f,g):\n    df1 = diff(f,t)\n    dg1 = diff(g,t)\n    return f.subs(t,0.0)*g.subs(t,0.0) + f.subs(t,3.0)*g.subs(t,3.0) + df1.subs(t,3.0)*dg1.subs(t,3.0) + f.subs(t,6.0)*g.subs(t,6.0)\n#Finds basis for subspace of polynomials of degree <= 3\nd=3 # max degree\nmyOutput4=[] # initialize the output with zeros\nfor i in range(d+1):\n    fi=t**i\n    for j in range(i):\n        fi+=-inner_product4(myOutput4[j],t**i)*myOutput4[j]\n    myOutput4.append(fi/(sqrt(inner_product4(fi,fi))))\nprint(myOutput4)\n#Projection of sin onto subspace of polynomials of degree <= 3\nz=0\nfor p in myOutput4:\n    z+=inner_product4(sin(t),p) * p\nprint(z)\nmyplot=plot(sin(t),z,(t,-5,5),ylim=[-5,5],show=False)\nmyplot[0].line_color = 'r'\nmyplot[1].line_color = 'g'\nmyplot.show()","output":{"0":{"name":"stdout","output_type":"stream","text":"[sqrt(3)/3, 0.229415733870562*t - 0.688247201611685, 0.136082763487954*t**2 - 0.816496580927726*t + 0.408248290463862, 0.114155814869796*t**3 - 1.02740233382816*t**2 + 2.10887847469991*t - 0.162221421130765]\n0.104824805211181*t**3 - 0.974626331029442*t**2 + 2.02749574887432*t - 2.4980018054066e-15\n"},"1":{"data":{"image/png":"57708f8cdab21c373eb3dc3245b60f6f5b5ae9c8"}}},"cell_type":"code","exec_count":11}
{"type":"cell","id":"806a9d","pos":4,"input":"import numpy as np\nfrom sympy import *\nd=3\nout=[]\nt = Symbol('t')\n#INNER PRODUCT 5\ndef inner_product5(h,g): \n    k=h*g\n    return integrate(k,(t,0,6))\n    for i in range(d+1):\n        fi=t**i\n        for j in range (i):\n            fi+=-inner_product5(out[j],t**i)*out[j]\n        out.append(fi/(sqrt(inner_product5(fi,fi))))\nprint(out)\n#Projection of sin onto subspace of polynomials of degree <= 3\nv=0\nfor p in out:\n    v+=inner_product5(sin(t),p) * p\nprint(v)\nmyplot=plot(sin(t),v,(t,-5,5),ylim=[-5,5],show=False)\nmyplot[0].line_color = 'r'\nmyplot[1].line_color = 'g'\nmyplot.show()","output":{"0":{"name":"stdout","output_type":"stream","text":"[]\n0\n"},"1":{"data":{"image/png":"95dd20d4ef8e069bbbcb8460f584544bdf54c2f2"}}},"cell_type":"code","exec_count":7}
{"type":"cell","id":"d037d1","pos":0,"input":"import numpy as np\nfrom sympy import *\nt = Symbol('t')\n#INNER PRODUCT 1\ndef inner_product1(f,g):\n    df1 = diff(f,t)\n    dg1 = diff(g,t)\n    return f.subs(t,0.0)*g.subs(t,0.0) + df1.subs(t,0.0)*dg1.subs(t,0.0) + f.subs(t,6.0)*g.subs(t,6.0) + df1.subs(t,6.0)*dg1.subs(t,6.0)\n#Finds basis for subspace of polynomials of degree <= 3\nd=3 # max degree\nmyOutput=[] # initialize the output with zeros\nfor i in range(d+1):\n    fi=t**i\n    for j in range(i):\n        fi+=-inner_product1(myOutput[j],t**i)*myOutput[j]\n    myOutput.append(fi/(sqrt(inner_product1(fi,fi))))\nprint(myOutput)\n#Projection of sin onto subspace of polynomials of degree <= 3\nw=0\nfor p in myOutput:\n    w+=inner_product1(sin(t),p) * p\nprint(w)\nmyplot=plot(sin(t),w,(t,-5,5),ylim=[-5,5],show=False)\nmyplot[0].line_color = 'r'\nmyplot[1].line_color = 'g'\nmyplot.show()","output":{"0":{"name":"stdout","output_type":"stream","text":"[sqrt(2)/2, 0.223606797749979*t - 0.670820393249937, 0.117851130197758*t**2 - 0.707106781186547*t, 0.0414086662499961*t**3 - 0.372677996249966*t**2 + 0.670820393249943*t + 0.22360679774998]\n0.0570363551680557*t**3 - 0.516646339291639*t**2 + 1.00000000000001*t + 9.99200722162641e-16\n"},"1":{"data":{"image/png":"e49b6885de2cc14454b457078a1a2e507e547f38"}}},"cell_type":"code","exec_count":8}
{"type":"cell","id":"e654eb","pos":6,"input":"w=0\nfor p in myOutput:\n    w+=inner_product1(sin(t),p) * p\ny=0\nfor p in myOut2:\n    y+=inner_product2(sin(t),p) * p\nu=0\nfor p in myOut:\n    u+=inner_product3(sin(t),p) * p\nz=0\nfor p in myOutput4:\n    z+=inner_product4(sin(t),p) * p\nv=0\nfor p in out:\n    v+=inner_product5(sin(t),p) * p\ns=0\nfor p in myOutput6:\n    s+=inner_product6(sin(t),p) * p\nmyplot=plot(sin(t),s,v,z,u,y,w,(t,-5,5),ylim=[-5,5],show=False)\nmyplot[0].line_color = 'r' #sin(t) is red\nmyplot[1].line_color = 'g' #s is green\nmyplot[2].line_color = 'b' #v is blue\nmyplot[3].line_color = 'c' #z is cyan\nmyplot[4].line_color = 'm' #u is magenta\nmyplot[5].line_color = 'y' #y is yellow\nmyplot[6].line_color = 'k' #w is black\nmyplot.show()","output":{"0":{"data":{"image/png":"92bc6863ba2b58e07e29037d219ded5f8e71860b"}}},"cell_type":"code","exec_count":12}
{"type":"cell","id":"83bf00","pos":2,"input":"import numpy as np\nfrom sympy import *\nt = Symbol('t')\n#INNER PRODUCT 3\ndef inner_product3(f,g):\n#   return f(0.0)*g(0.0) + f(2.0)*g(2.0) + f(4.0)*g(4.0) + f(6.0)*g(6.0)\n    return f.subs(t,0.0)*g.subs(t,0.0) + f.subs(t,2.0)*g.subs(t,2.0) + f.subs(t,4.0)*g.subs(t,4.0) + f.subs(t,6.0)*g.subs(t,6.0)\n#Finds basis for subspace of polynomials of degree <= 3\nd=3 # max degree\nmyOut=[] # initialize the output with zeros\nfor i in range(d+1):\n    fi=t**i\n    for j in range(i):\n        fi+=-inner_product3(myOut[j],t**i)*myOut[j]\n    myOut.append(fi/(sqrt(inner_product3(fi,fi))))\nprint(myOut)\n#Projection of sin onto subspace of polynomials of degree <= 3\nu=0\nfor p in myOut:\n    u+=inner_product3(sin(t),p) * p\nprint(u)\nmyplot=plot(sin(t),u,(t,-5,5),ylim=[-5,5],show=False)\nmyplot[0].line_color = 'r'\nmyplot[1].line_color = 'g'\nmyplot.show()","output":{"0":{"name":"stdout","output_type":"stream","text":"[1/2, 0.223606797749979*t - 0.670820393249937, 0.125*t**2 - 0.75*t + 0.5, 0.0931694990624911*t**3 - 0.838525491562423*t**2 + 1.75158658237485*t - 0.223606797749988]\n0.0983100889208734*t**3 - 0.911785202145156*t**2 + 1.88497876201967*t - 1.13797860024079e-14\n"},"1":{"data":{"image/png":"f952e03eab202cf23564bda1185a0de4ff292059"}}},"cell_type":"code","exec_count":10}
{"type":"cell","id":"c09b27","pos":5,"input":"import numpy as np\nfrom sympy import *\nt = Symbol('t')\n#INNER PRODUCT 6\ndef inner_product6(f,g):\n    df1 = diff(f,t)\n    dg1 = diff(g,t)\n    df2 = diff(f,t,t)\n    dg2 = diff(g,t,t)\n    df3 = diff(f,t,t,t)\n    dg3 = diff(g,t,t,t)\n    return f.subs(t,3.0)*g.subs(t,3.0) + df1.subs(t,3.0)*dg1.subs(t,3.0) + df2.subs(t,3.0)*dg2.subs(t,3.0) +             df3.subs(t,3.0)*dg3.subs(t,3.0)\n#Finds basis for subspace of polynomials of degree <= 3\nd=3 # max degree\nmyOutput6=[] # initialize the output with zeros\nfor i in range(d+1):\n    fi=t**i\n    for j in range(i):\n        fi+=-inner_product6(myOutput6[j],t**i)*myOutput6[j]\n    myOutput6.append(fi/(sqrt(inner_product6(fi,fi))))\nprint(myOutput6)\n#Projection of sin onto subspace of polynomials of degree <= 3\ns=0\nfor p in myOutput6:\n    s+=inner_product6(sin(t),p) * p\nprint(s)\nmyplot=plot(sin(t),s,(t,-5,5),ylim=[-5,5],show=False)\nmyplot[0].line_color = 'r'\nmyplot[1].line_color = 'g'\nmyplot.show()","output":{"0":{"name":"stdout","output_type":"stream","text":"[1, t - 3.0, t**2/2 - 3.0*t + 4.5, t**3/6 - 1.5*t**2 + 4.5*t - 4.5]\n0.164998749433408*t**3 - 1.5555487489306*t**2 + 3.88833376228116*t - 1.9789087731102\n"},"1":{"data":{"image/png":"7e5a69a1141962483df98c2fab09043b5cffcfab"}}},"cell_type":"code","exec_count":1}