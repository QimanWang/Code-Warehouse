<program>
 <importStmt>
  Reserved Word: import
  Reserved Word: java
  .
  Reserved Word: util
  .
  Reserved Word: Scanner
  ;
  ... node has no more children
 Reserved Word: class
 IDENTIFIER: CS316ex5
 {
 <dataFieldDecl>
  Reserved Word: static
  <varDecl>
   Reserved Word: Scanner
   IDENTIFIER: input
   =
   Reserved Word: new
   Reserved Word: Scanner
   (
   Reserved Word: System
   .
   Reserved Word: in
   )
   ;
   ... node has no more children
  ... node has no more children
 <mainDecl>
  Reserved Word: public
  Reserved Word: static
  Reserved Word: void
  Reserved Word: main
  (
  Reserved Word: String
  IDENTIFIER: argv
  [
  ]
  )
  <compoundStmt>
   {
   <statement>
    <outputStmt>
     Reserved Word: System
     .
     Reserved Word: out
     .
     Reserved Word: print
     (
     <printArgument>
      CHARACTER STRING LITERAL: "Enter a positive integer less than 10: "
      ... node has no more children
     )
     ;
     ... node has no more children
    ... node has no more children
   <statement>
    <varDecl>
     Reserved Word: int
     <singleVarDecl>
      IDENTIFIER: amtOfInput
      =
      <expr3>
       <expr2>
        <expr1>
         IDENTIFIER: input
         .
         Reserved Word: nextInt
         (
         )
         ... node has no more children
        ... node has no more children
       ... node has no more children
      ... node has no more children
     ;
     ... node has no more children
    ... node has no more children
   <statement>
    <varDecl>
     Reserved Word: int
     <singleVarDecl>
      IDENTIFIER: counter1
      =
      <expr3>
       <expr2>
        <expr1>
         UNSIGNED INTEGER LITERAL: 1
         ... node has no more children
        ... node has no more children
       ... node has no more children
      ... node has no more children
     ;
     ... node has no more children
    ... node has no more children
   <statement>
    <whileStmt>
     Reserved Word: while
     (
     <expr7>
      <expr6>
       <expr5>
        <expr4>
         <expr3>
          <expr2>
           <expr1>
            IDENTIFIER: counter1
            ... node has no more children
           ... node has no more children
          ... node has no more children
         <=
         ... node has no more children
        ... node has no more children
       ... node has no more children
      ... node has no more children
